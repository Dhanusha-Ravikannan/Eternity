// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum itemType {
  gold
  silver
}

model AddCustomer {
  id          Int     @id @default(autoincrement())
  name        String
  phoneNumber String
  address     String
  email       String? @unique
}

model AddCasting {
  id          Int    @id @default(autoincrement())
  name        String
  phoneNumber String
  address     String
  email       String @unique

  Castings Casting[]
}

model AddFiling {
  id          Int    @id @default(autoincrement())
  name        String
  phoneNumber String
  address     String
  email       String @unique
}

model AddSetting {
  id          Int    @id @default(autoincrement())
  name        String
  phoneNumber String
  address     String
  email       String @unique
}

model AddBuffing {
  id          Int    @id @default(autoincrement())
  name        String
  phoneNumber String
  address     String
  email       String @unique
}

model AddItem {
  id   Int    @id @default(autoincrement())
  name String
}

model AddSupplierItem {
  id          Int    @id @default(autoincrement())
  name        String
  email       String @unique
  phoneNumber String
  address     String
}

model AddPurchaseStock {
  id               Int      @id @default(autoincrement())
  name             String
  createdAt        DateTime @default(now())
  item             itemType
  goldWeight       Int?
  goldTouch        Float?
  goldPurity       Float?
  goldRate         Float?
  goldtotalValue   Float?
  silverWeight     Int?
  silverTouch      Float?
  silverPurity     Float?
  silverRate       Float?
  silvertotalValue Float?
}

model Casting {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  name        String
  givenGold   Float
  givenTouch  Float
  purity      Float
  finalTouch  Float
  pureValue   Float
  finalWeight Float
  copper      Float

  castingId  Int
  addcasting AddCasting @relation(fields: [castingId], references: [id])
}
